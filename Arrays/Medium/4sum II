#### problem solution : https://leetcode.com/problems/4sum-ii/

#### to reduce the time complexity of O(n^4) to O(n^2) we have to use hash map for two different arrays and sum those two arrays if we get zero then we have to add one
### to our results



from collections import defaultdict
nums1=list(map(int,input().split()))
nums2=list(map(int,input().split()))
nums3=list(map(int,input().split()))
nums4=list(map(int,input().split()))

n1n2 = defaultdict(int)
for n1 in nums1:
    for n2 in nums2:
        n1n2[n1 + n2] += 1
n3n4 = defaultdict(int)
for n3 in nums3:
    for n4 in nums4:
        n3n4[n3 + n4] += 1
ans = 0
for s in n1n2:
    ans += n1n2[s] * n3n4[-s]
print(ans)
