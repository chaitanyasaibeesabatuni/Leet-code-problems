##### program : https://www.codingninjas.com/codestudio/library/finding-the-minimum-cost-to-reduce-the-array-by-merging-the-adjacent-elements-repetitively


### solution :



def minCost(arr, n):
    dp = [[0 for i in range(n)] for j in range(n)]
    print(dp)
    for L in range(2, n + 1):
        for i in range(n - L + 1):
            j = i + L - 1
            dp[i][j] = float("inf")
            for k in range(i, j):
                dp[i][j] = min(dp[i][j], dp[i][k] + dp[k + 1][j] + sum(arr, i, j))
            print(dp,111)
    return dp[0][n - 1]


def sum(arr, i, j):
    s = 0
    for k in range(i, j + 1):
        s += arr[k]
    print(arr, i, j,s)
    return s


if __name__ == '__main__':
    arr = list(map(int,input().split()))
    n = len(arr)
    print(minCost(arr, n))
